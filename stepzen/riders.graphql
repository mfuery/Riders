type Rider {
  id: ID!
  first_name: String
  last_name: String
  bike_model: String!
  rideSlugs: [Slug]
    @materializer(query: "rideSlugs", arguments: [{ name: "id", field: "id" }])
  myBike: Bike
    @materializer(
      query: "bike"
      arguments: [{ name: "model", field: "bike_model" }]
    )
}
type Bike {
  model: String!
  color: String
  description: String
  type: String
}
type Slug {
  slug: String!
  myRides: [Ride]
    @materializer(
      query: "rideBySlug"
      arguments: [{ name: "slug", field: "slug" }]
    )
}
type Ride {
  id: ID!
  title: String
  description: String
  height: String
  countries: String
  continent: String
  image: String
  slug: String!
  updated_at: String
}

type Query {
  rider(id: ID!): Rider
    @rest(endpoint: "https://rider-rest.herokuapp.com/riders/$id;")
  bike(model: String!): Bike
    @rest(endpoint: "https://rider-rest.herokuapp.com/bikes?model=$model;")
  bikes: [Bike] @rest(endpoint: "https://rider-rest.herokuapp.com/bikes")
  rideSlugs(id: ID!): [Slug]
    @rest(
      resultroot: "rides[]"
      endpoint: "https://rider-rest.herokuapp.com/riders/$id;"
    )
  riders: [Rider]
    @rest(resultroot: "", endpoint: "https://rider-rest.herokuapp.com/riders")
  rides: [Ride]
    @rest(resultroot: "", endpoint: "https://rider-rest.herokuapp.com/rides")
  ride(id: ID!): Ride
    @rest(
      resultroot: ""
      endpoint: "https://rider-rest.herokuapp.com/rides/$id;"
    )
  rideBySlug(slug: String!): [Ride]
    @rest(endpoint: "https://rider-rest.herokuapp.com/rides?slug=$slug;")
}
